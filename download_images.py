{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":31040,"isInternetEnabled":true,"language":"python","sourceType":"script","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# pip install GEOparse git+https://github.com/IbrahimFangary/cloupe_image.git\n\nimport urllib.request\nimport os\nimport gzip\nimport shutil\nimport Cloupe_image\nimport GEOparse\n\nos.makedirs('data')\nos.chdir('data')\n\nbase_dir = os.getcwd()\n\ngse = GEOparse.get_GEO(\"GSE210616\", destdir=\"./geo_data\")\n\ndef unzip_cloupe_file(gz_path):\n    if not gz_path.endswith('.gz'):\n        print(f\"[!] Not a .gz file: {gz_path}\")\n        return\n    \n    output_path = gz_path[:-3]  \n    if os.path.exists(output_path):\n        return  \n\n    try:\n        with gzip.open(gz_path, 'rb') as f_in, open(output_path, 'wb') as f_out:\n            shutil.copyfileobj(f_in, f_out)\n        os.remove(gz_path)\n\n    except Exception as e:\n        print(f\"[!] Failed to unzip {gz_path}: {e}\")\n\nfor gsm_id in gse.gsms.keys():\n\n    os.chdir(base_dir)\n    title = gse.gsms[gsm_id].metadata['title'][0]  \n    \n   \n    parts = title.split(', ')\n    patient_info = parts[1].strip() \n    section_info = parts[2].strip()  \n    \n    # Clean names\n    patient_dir = f\"{patient_info.replace(' ', '_')}\"  \n    section_dir = f\"{section_info.replace(' ', '_')}\"     \n    \n    full_dir_path = os.path.join(patient_dir, section_dir)\n    os.makedirs(full_dir_path, exist_ok=True)\n    \n    cloupe_url = gse.gsms[gsm_id].metadata['supplementary_file_1'][0]\n    \n    if 'cloupe' in cloupe_url:\n        filename = cloupe_url.split('/')[-1]\n        output_path = os.path.join(full_dir_path, filename)\n        print(f\"Downloading {filename} to {full_dir_path}\")\n        try:\n            urllib.request.urlretrieve(cloupe_url, output_path)\n        except Exception as e:\n            print(f\"Failed to download {cloupe_url}: {e}\")\n            \n        unzip_cloupe_file(output_path)\n        \n        os.chdir(os.path.join(base_dir, full_dir_path))\n        Cloupe_image.stitch_cloupe_image(os.path.join(base_dir, output_path.split('.gz')[0]))\n        \n        os.rename('stitched_highres.tiff', f\"{filename.split('.cloupe.gz')[0]}_stitched_highres.tiff\")\n        os.rename('stitched_downsampled.tiff', f\"{filename.split('.cloupe.gz')[0]}_stitched_downsampled.tiff\")\n        os.remove(os.path.join(base_dir, output_path.split('.gz')[0]))\n\n","metadata":{"_uuid":"fd813bae-6664-424d-92dd-321ef5b43a7e","_cell_guid":"5c6f5c8a-bf97-4c01-ac64-1e466d45645e","trusted":true,"collapsed":false,"jupyter":{"outputs_hidden":false}},"outputs":[],"execution_count":null}]}